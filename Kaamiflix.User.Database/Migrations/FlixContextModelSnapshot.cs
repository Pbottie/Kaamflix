// <auto-generated />
using System;
using Kaamiflix.Membership.Database.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Kaamiflix.Membership.Database.Migrations
{
    [DbContext(typeof(FlixContext))]
    partial class FlixContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Kaamiflix.Membership.Database.Entities.Director", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Directors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Frank Gold"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Stephan Manberg"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Charlie Night"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Jane Fresh"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Hera Gomu"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Nadia Naka"
                        });
                });

            modelBuilder.Entity("Kaamiflix.Membership.Database.Entities.Film", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("DirectorId")
                        .HasColumnType("int");

                    b.Property<string>("FilmUrl")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<bool>("Free")
                        .HasColumnType("bit");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("MarqueeImageUrl")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("Released")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("DirectorId");

                    b.ToTable("Films");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Lorem",
                            DirectorId = 1,
                            FilmUrl = "YOUTUBE",
                            Free = true,
                            ImageUrl = "",
                            MarqueeImageUrl = "",
                            Released = new DateTime(2010, 11, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Spiderman"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Ipsum",
                            DirectorId = 2,
                            FilmUrl = "YOUTUBE",
                            Free = true,
                            ImageUrl = "",
                            MarqueeImageUrl = "",
                            Released = new DateTime(2012, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Batman"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Campins",
                            DirectorId = 3,
                            FilmUrl = "YOUTUBE",
                            Free = true,
                            ImageUrl = "",
                            MarqueeImageUrl = "",
                            Released = new DateTime(2005, 10, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "The Hulk"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Changer",
                            DirectorId = 4,
                            FilmUrl = "YOUTUBE",
                            Free = false,
                            ImageUrl = "",
                            MarqueeImageUrl = "",
                            Released = new DateTime(1990, 12, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "The Shining"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Krens",
                            DirectorId = 5,
                            FilmUrl = "YOUTUBE",
                            Free = false,
                            ImageUrl = "",
                            MarqueeImageUrl = "",
                            Released = new DateTime(1970, 5, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Godzilla"
                        },
                        new
                        {
                            Id = 6,
                            Description = "Hegerd",
                            DirectorId = 6,
                            FilmUrl = "YOUTUBE",
                            Free = false,
                            ImageUrl = "",
                            MarqueeImageUrl = "",
                            Released = new DateTime(2018, 6, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "The Ring"
                        });
                });

            modelBuilder.Entity("Kaamiflix.Membership.Database.Entities.FilmGenre", b =>
                {
                    b.Property<int>("FilmId")
                        .HasColumnType("int");

                    b.Property<int>("GenreId")
                        .HasColumnType("int");

                    b.HasKey("FilmId", "GenreId");

                    b.HasIndex("GenreId");

                    b.ToTable("FilmGenres", (string)null);

                    b.HasData(
                        new
                        {
                            FilmId = 1,
                            GenreId = 1
                        },
                        new
                        {
                            FilmId = 1,
                            GenreId = 2
                        },
                        new
                        {
                            FilmId = 2,
                            GenreId = 1
                        },
                        new
                        {
                            FilmId = 3,
                            GenreId = 1
                        },
                        new
                        {
                            FilmId = 4,
                            GenreId = 4
                        },
                        new
                        {
                            FilmId = 5,
                            GenreId = 5
                        },
                        new
                        {
                            FilmId = 6,
                            GenreId = 4
                        },
                        new
                        {
                            FilmId = 6,
                            GenreId = 6
                        });
                });

            modelBuilder.Entity("Kaamiflix.Membership.Database.Entities.Genre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Action"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Sci-Fi"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Thriller"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Horror"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Comedy"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Romance"
                        });
                });

            modelBuilder.Entity("Kaamiflix.Membership.Database.Entities.SimilarFilm", b =>
                {
                    b.Property<int>("FilmId")
                        .HasColumnType("int");

                    b.Property<int>("SimilarFilmId")
                        .HasColumnType("int");

                    b.HasKey("FilmId", "SimilarFilmId");

                    b.HasIndex("SimilarFilmId");

                    b.ToTable("SimilarFilms");

                    b.HasData(
                        new
                        {
                            FilmId = 1,
                            SimilarFilmId = 2
                        },
                        new
                        {
                            FilmId = 1,
                            SimilarFilmId = 3
                        },
                        new
                        {
                            FilmId = 2,
                            SimilarFilmId = 1
                        },
                        new
                        {
                            FilmId = 2,
                            SimilarFilmId = 3
                        },
                        new
                        {
                            FilmId = 3,
                            SimilarFilmId = 1
                        },
                        new
                        {
                            FilmId = 3,
                            SimilarFilmId = 2
                        },
                        new
                        {
                            FilmId = 4,
                            SimilarFilmId = 6
                        },
                        new
                        {
                            FilmId = 6,
                            SimilarFilmId = 4
                        },
                        new
                        {
                            FilmId = 5,
                            SimilarFilmId = 3
                        });
                });

            modelBuilder.Entity("Kaamiflix.Membership.Database.Entities.Film", b =>
                {
                    b.HasOne("Kaamiflix.Membership.Database.Entities.Director", "Director")
                        .WithMany("Films")
                        .HasForeignKey("DirectorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Director");
                });

            modelBuilder.Entity("Kaamiflix.Membership.Database.Entities.FilmGenre", b =>
                {
                    b.HasOne("Kaamiflix.Membership.Database.Entities.Film", "Film")
                        .WithMany()
                        .HasForeignKey("FilmId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Kaamiflix.Membership.Database.Entities.Genre", "Genre")
                        .WithMany()
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Film");

                    b.Navigation("Genre");
                });

            modelBuilder.Entity("Kaamiflix.Membership.Database.Entities.SimilarFilm", b =>
                {
                    b.HasOne("Kaamiflix.Membership.Database.Entities.Film", "Film")
                        .WithMany("SimilarFilms")
                        .HasForeignKey("FilmId")
                        .IsRequired();

                    b.HasOne("Kaamiflix.Membership.Database.Entities.Film", "Similar")
                        .WithMany()
                        .HasForeignKey("SimilarFilmId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Film");

                    b.Navigation("Similar");
                });

            modelBuilder.Entity("Kaamiflix.Membership.Database.Entities.Director", b =>
                {
                    b.Navigation("Films");
                });

            modelBuilder.Entity("Kaamiflix.Membership.Database.Entities.Film", b =>
                {
                    b.Navigation("SimilarFilms");
                });
#pragma warning restore 612, 618
        }
    }
}
